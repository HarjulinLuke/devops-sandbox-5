name: 'Create New Release'
description: 'Create a new GitHub release using GitVersion after a PR is closed and merged.'
on:
  workflow_call:
    inputs:
      tag-prefix:
        description: "Prefix for the tag. Default is empty"
        required: false
        type: string
        default: ''
      create-major-minor:
        description: "Option to create Major Minor Versioning"
        required: false
        type: string
        default: 'true'
      create-major:
        description: "Option to create Major Version"
        required: false
        type: string
        default: 'true'
      delete-merged-branch:
        description: "Option to delete merged branch"
        required: false
        type: string
        default: 'true'
      prerelease:
        description: "Option to create a pre-release"
        required: false
        type: string
        default: 'false'
      generate-notes:
        description: "Option to auto-generate release notes"
        required: false
        type: string
        default: 'true'

permissions:
  id-token: write
  contents: write
  pull-requests: read

jobs:
  CreateNewReleaseVersion:
    name: 'Create New Tags'
    runs-on: 'ubuntu-latest'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Prepare gitversion tagprefix
      id: prepare_tagprefix
      shell: pwsh
      run: |
        if ("${{ inputs.tag-prefix }}" -ne "") {
          "tag-prefix-config=/overrideconfig tag-prefix=${{ inputs.tag-prefix }}" >> $env:GITHUB_OUTPUT
        }
    - name: Get Next Tag
      id: gitversion
      uses: ./.github/actions/git-version
      with:
        git-tool-latest: 'true'
        use-config-file: 'true'
        pre-release: '${{ inputs.prerelease }}'
        additional-arguments: '${{ steps.prepare_tagprefix.outputs.tag-prefix-config }}'

    - name: Create Major Release 
      id: create_major_release
      if: ${{ inputs.create-major == 'true' && inputs.prerelease == 'false' }}
      uses: ./.github/actions/create-github-release
      with:
        tag-name: '${{ inputs.tag-prefix }}${{ steps.gitversion.outputs.Major }}'
        release-name: '${{ inputs.tag-prefix }}${{ steps.gitversion.outputs.Major }}'
        commitish: '${{ github.sha }}'
        draft: false
        prerelease: false
        generate-notes: false
        token: ${{ github.token }}
        repo: ${{ github.repository }}

    - name: Create Major Minor Release 
      id: create_majorminor_release
      if: ${{ inputs.create-major-minor == 'true' && inputs.prerelease == 'false' }}
      uses: ./.github/actions/create-github-release
      with:
        tag-name: '${{ inputs.tag-prefix }}${{ steps.gitversion.outputs.Major }}.${{ steps.gitversion.outputs.Minor }}'
        release-name: '${{ inputs.tag-prefix }}${{ steps.gitversion.outputs.Major }}.${{ steps.gitversion.outputs.Minor }}'
        commitish: '${{ github.sha }}'
        draft: false
        prerelease: false
        generate-notes: false
        token: ${{ github.token }}
        repo: ${{ github.repository }}

    - name: Create Version Release
      id: create_release
      uses: ./.github/actions/create-github-release
      with:
        tag-name: ${{ inputs.tag-prefix }}${{ inputs.prerelease == 'true' && steps.gitversion.outputs.SemVer || steps.gitversion.outputs.MajorMinorPatch }}
        release-name: ${{ inputs.tag-prefix }}${{ inputs.prerelease == 'true' && steps.gitversion.outputs.SemVer || steps.gitversion.outputs.MajorMinorPatch }}
        commitish: '${{ github.sha }}'
        draft: false
        prerelease: ${{ inputs.prerelease }}
        generate-notes: ${{ inputs.generate-notes }}
        token: ${{ github.token }}
        repo: ${{ github.repository }}

    - name: Output to Job Summary
      id: output-element
      shell: pwsh
      run: |
        Write-Host "New Tag: ${{ steps.create_release.outputs.tag-name }}"
        "# :bookmark: New Tag: ${{ steps.create_release.outputs.tag-name }} `r`n" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
        "# [View Release on GitHub](${{ steps.create_release.outputs.release-url }}) `r`n" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
