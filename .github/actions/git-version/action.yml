name: "Git Versioning"
description: "Creating Sematic Versioning using GitVersion"

inputs:
  git-tool-latest:
    required: false
    description: "Use latest Git Tool version"
    default: 'false'
  pre-release:
    required: false
    description: "Enable pre-release for GitVersion"
    default: 'false'
  use-config-file:
    required: false
    description: "Use config file to determine version"
    default: 'false'
  override-config:
    required: false
    description: "Provide override config for GitVersion (e.g., tag-prefix=v)"
  
outputs:
  Major:
    value: ${{ steps.gitversion.outputs.major }}
    description: ''
  Minor:
    value: ${{ steps.gitversion.outputs.minor }}
    description: ''
  Patch:
    value: ${{ steps.gitversion.outputs.patch }}
    description: ''
  PreReleaseTag:
    value: ${{ steps.gitversion.outputs.preReleaseTag }}
    description: ''
  PreReleaseTagWithDash:
    value: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}
    description: ''
  PreReleaseLabel:
    value: ${{ steps.gitversion.outputs.preReleaseLabel }}
    description: ''
  PreReleaseNumber:
    value: ${{ steps.gitversion.outputs.preReleaseNumber }}
    description: ''
  WeightedPreReleaseNumber:
    value: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}
    description: ''
  BuildMetaData:
    value: ${{ steps.gitversion.outputs.buildMetaData }}
    description: ''
  FullBuildMetaData:
    value: ${{ steps.gitversion.outputs.fullBuildMetaData }}
    description: ''
  MajorMinorPatch:
    value: ${{ steps.gitversion.outputs.majorMinorPatch }}
    description: ''
  SemVer:
    value: ${{ steps.gitversion.outputs.semVer }}
    description: ''
  AssemblySemVer:
    value: ${{ steps.gitversion.outputs.assemblySemVer }}
    description: ''
  AssemblySemFileVer:
    value: ${{ steps.gitversion.outputs.assemblySemFileVer }}
    description: ''
  FullSemVer:
    value: ${{ steps.gitversion.outputs.fullSemVer }}
    description: ''
  InformationalVersion:
    value: ${{ steps.gitversion.outputs.informationalVersion }}
    description: ''
  BranchName:
    value: ${{ steps.gitversion.outputs.branchName }}
    description: ''
  EscapedBranchName:
    value: ${{ steps.gitversion.outputs.escapedBranchName }}
    description: ''
  Sha:
    value: ${{ steps.gitversion.outputs.sha }}
    description: ''
  ShortSha:
    value: ${{ steps.gitversion.outputs.shortSha }}
    description: ''
  VersionSourceSha:
    value: ${{ steps.gitversion.outputs.versionSourceSha }}
    description: ''
  CommitsSinceVersionSource:
    value: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}
    description: ''
  UncommittedChanges:
    value: ${{ steps.gitversion.outputs.uncommittedChanges }}
    description: ''
  CommitDate:
    value: ${{ steps.gitversion.outputs.commitDate }}
    description: ''

runs:
  using: "composite"
  steps:

  - name: 'Install GitVersion'
    uses: gittools/actions/gitversion/setup@v4.1.0
    with:
      versionSpec: '6.x'
      includePrerelease: ${{ inputs.pre-release }}
      preferLatestVersion: ${{ inputs.git-tool-latest }}
  
  - name: "Determine Version"
    id: gitversion
    uses: gittools/actions/gitversion/execute@v4.1.0
    with:
      overrideConfig: |
        ${{ inputs.override-config }}
  
  - name: Display GitVersion outputs (step output with prefix)
    shell: 'bash'
    run: |
      echo "Major: ${{ steps.gitversion.outputs.Major }}"
      echo "Minor: ${{ steps.gitversion.outputs.Minor }}"
      echo "Patch: ${{ steps.gitversion.outputs.Patch }}"
      echo "PreReleaseTag: ${{ steps.gitversion.outputs.PreReleaseTag }}"
      echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.PreReleaseTagWithDash }}"
      echo "PreReleaseLabel: ${{ steps.gitversion.outputs.PreReleaseLabel }}"
      echo "PreReleaseNumber: ${{ steps.gitversion.outputs.PreReleaseNumber }}"
      echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.WeightedPreReleaseNumber }}"
      echo "BuildMetaData: ${{ steps.gitversion.outputs.BuildMetaData }}"
      echo "FullBuildMetaData: ${{ steps.gitversion.outputs.FullBuildMetaData }}"
      echo "MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}"
      echo "SemVer: ${{ steps.gitversion.outputs.SemVer }}"
      echo "AssemblySemVer: ${{ steps.gitversion.outputs.AssemblySemVer }}"
      echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.AssemblySemFileVer }}"
      echo "FullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}"
      echo "InformationalVersion: ${{ steps.gitversion.outputs.InformationalVersion }}"
      echo "BranchName: ${{ steps.gitversion.outputs.BranchName }}"
      echo "EscapedBranchName: ${{ steps.gitversion.outputs.EscapedBranchName }}"
      echo "Sha: ${{ steps.gitversion.outputs.Sha }}"
      echo "ShortSha: ${{ steps.gitversion.outputs.ShortSha }}"
      echo "VersionSourceSha: ${{ steps.gitversion.outputs.VersionSourceSha }}"
      echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
      echo "UncommittedChanges: ${{ steps.gitversion.outputs.UncommittedChanges }}"
      echo "CommitDate: ${{ steps.gitversion.outputs.CommitDate }}"
