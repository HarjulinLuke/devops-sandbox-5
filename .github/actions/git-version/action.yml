#Author: Balaji N
#Date: 06-10-2023
#Description: Git Versioning

name: "Git Versioning"
description: "Creating Sematic Version number Major.Minior.Patch"

inputs:
  git-tool-latest:
    required: false
    description: "Use latest Git Tool version"
    default: 'false'
  pre-release:
    required: false
    description: "Enable pre-release for GitVersion"
    default: 'false'
  use-config-file:
    required: false
    description: "Use config file to determine version"
    default: 'false'
  additional-arguments:
    required: false
    description: "Additional command line arguments to pass to the GitVersion cmd."
  
outputs:
  Major:
    value: ${{ steps.gitversion.outputs.major }}
    description: ''
  Minor:
    value: ${{ steps.gitversion.outputs.minor }}
    description: ''
  Patch:
    value: ${{ steps.gitversion.outputs.patch }}
    description: ''
  PreReleaseTag:
    value: ${{ steps.gitversion.outputs.preReleaseTag }}
    description: ''
  PreReleaseTagWithDash:
    value: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}
    description: ''
  PreReleaseLabel:
    value: ${{ steps.gitversion.outputs.preReleaseLabel }}
    description: ''
  PreReleaseNumber:
    value: ${{ steps.gitversion.outputs.preReleaseNumber }}
    description: ''
  WeightedPreReleaseNumber:
    value: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}
    description: ''
  BuildMetaData:
    value: ${{ steps.gitversion.outputs.buildMetaData }}
    description: ''
  FullBuildMetaData:
    value: ${{ steps.gitversion.outputs.fullBuildMetaData }}
    description: ''
  MajorMinorPatch:
    value: ${{ steps.gitversion.outputs.majorMinorPatch }}
    description: ''
  SemVer:
    value: ${{ steps.gitversion.outputs.semVer }}
    description: ''
  AssemblySemVer:
    value: ${{ steps.gitversion.outputs.assemblySemVer }}
    description: ''
  AssemblySemFileVer:
    value: ${{ steps.gitversion.outputs.assemblySemFileVer }}
    description: ''
  FullSemVer:
    value: ${{ steps.gitversion.outputs.fullSemVer }}
    description: ''
  InformationalVersion:
    value: ${{ steps.gitversion.outputs.informationalVersion }}
    description: ''
  BranchName:
    value: ${{ steps.gitversion.outputs.branchName }}
    description: ''
  EscapedBranchName:
    value: ${{ steps.gitversion.outputs.escapedBranchName }}
    description: ''
  Sha:
    value: ${{ steps.gitversion.outputs.sha }}
    description: ''
  ShortSha:
    value: ${{ steps.gitversion.outputs.shortSha }}
    description: ''
  VersionSourceSha:
    value: ${{ steps.gitversion.outputs.versionSourceSha }}
    description: ''
  CommitsSinceVersionSource:
    value: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}
    description: ''
  UncommittedChanges:
    value: ${{ steps.gitversion.outputs.uncommittedChanges }}
    description: ''
  CommitDate:
    value: ${{ steps.gitversion.outputs.commitDate }}
    description: ''

runs:
  using: "composite"
  steps:

  - name: 'Install GitVersion'
    uses: gittools/actions/gitversion/setup@v4.1.0
    with:
      versionSpec: '6.x'
      includePrerelease: ${{ inputs.pre-release }}
      preferLatestVersion: ${{ inputs.git-tool-latest }}
  
  - name: "Determine Version"
    id: gitversion
    uses: gittools/actions/gitversion/command@v4.1.0
    with:
      arguments: ${{ inputs.additional-arguments }} /output buildserver
  
  - name: Display GitVersion outputs (step output with prefix)
    shell: 'bash'
    run: |
      echo "Major: ${{ env.GitVersion_Major }}"
      echo "Minor: ${{ env.GitVersion_Minor }}"
      echo "Patch: ${{ env.GitVersion_Patch }}"
      echo "PreReleaseTag: ${{ env.GitVersion_PreReleaseTag }}"
      echo "PreReleaseTagWithDash: ${{ env.GitVersion_PreReleaseTagWithDash }}"
      echo "PreReleaseLabel: ${{ env.GitVersion_PreReleaseLabel }}"
      echo "PreReleaseNumber: ${{ env.GitVersion_PreReleaseNumber }}"
      echo "WeightedPreReleaseNumber: ${{ env.GitVersion_WeightedPreReleaseNumber }}"
      echo "BuildMetaData: ${{ env.GitVersion_BuildMetaData }}"
      echo "FullBuildMetaData: ${{ env.GitVersion_FullBuildMetaData }}"
      echo "MajorMinorPatch: ${{ env.GitVersion_MajorMinorPatch }}"
      echo "SemVer: ${{ env.GitVersion_SemVer }}"
      echo "AssemblySemVer: ${{ env.GitVersion_AssemblySemVer }}"
      echo "AssemblySemFileVer: ${{ env.GitVersion_AssemblySemFileVer }}"
      echo "FullSemVer: ${{ env.GitVersion_FullSemVer }}"
      echo "InformationalVersion: ${{ env.GitVersion_InformationalVersion }}"
      echo "BranchName: ${{ env.GitVersion_BranchName }}"
      echo "EscapedBranchName: ${{ env.GitVersion_EscapedBranchName }}"
      echo "Sha: ${{ env.GitVersion_Sha }}"
      echo "ShortSha: ${{ env.GitVersion_ShortSha }}"
      echo "VersionSourceSha: ${{ env.GitVersion_VersionSourceSha }}"
      echo "CommitsSinceVersionSource: ${{ env.GitVersion_CommitsSinceVersionSource }}"
      echo "UncommittedChanges: ${{ env.GitVersion_UncommittedChanges }}"
      echo "CommitDate: ${{ env.GitVersion_CommitDate }}"

  - name: Output GitVersion results
    id: output-gitversion
    shell: pwsh
    run: |
      "major=${{ env.GitVersion_Major }}" >> $env:GITHUB_OUTPUT
      "minor=${{ env.GitVersion_Minor }}" >> $env:GITHUB_OUTPUT
      "patch=${{ env.GitVersion_Patch }}" >> $env:GITHUB_OUTPUT
      "preReleaseTag=${{ env.GitVersion_PreReleaseTag }}" >> $env:GITHUB_OUTPUT
      "preReleaseTagWithDash=${{ env.GitVersion_PreReleaseTagWithDash }}" >> $env:GITHUB_OUTPUT
      "preReleaseLabel=${{ env.GitVersion_PreReleaseLabel }}" >> $env:GITHUB_OUTPUT
      "preReleaseNumber=${{ env.GitVersion_PreReleaseNumber }}" >> $env:GITHUB_OUTPUT
      "weightedPreReleaseNumber=${{ env.GitVersion_WeightedPreReleaseNumber }}" >> $env:GITHUB_OUTPUT
      "buildMetaData=${{ env.GitVersion_BuildMetaData }}" >> $env:GITHUB_OUTPUT
      "fullBuildMetaData=${{ env.GitVersion_FullBuildMetaData }}" >> $env:GITHUB_OUTPUT
      "majorMinorPatch=${{ env.GitVersion_MajorMinorPatch }}" >> $env:GITHUB_OUTPUT
      "semVer=${{ env.GitVersion_SemVer }}" >> $env:GITHUB_OUTPUT
      "assemblySemVer=${{ env.GitVersion_AssemblySemVer }}" >> $env:GITHUB_OUTPUT
      "assemblySemFileVer=${{ env.GitVersion_AssemblySemFileVer }}" >> $env:GITHUB_OUTPUT
      "fullSemVer=${{ env.GitVersion_FullSemVer }}" >> $env:GITHUB_OUTPUT
      "informationalVersion=${{ env.GitVersion_InformationalVersion }}" >> $env:GITHUB_OUTPUT
      "branchName=${{ env.GitVersion_BranchName }}" >> $env:GITHUB_OUTPUT
      "escapedBranchName=${{ env.GitVersion_EscapedBranchName }}" >> $env:GITHUB_OUTPUT
      "sha=${{ env.GitVersion_Sha }}" >> $env:GITHUB_OUTPUT
      "shortSha=${{ env.GitVersion_ShortSha }}" >> $env:GITHUB_OUTPUT
      "versionSourceSha=${{ env.GitVersion_VersionSourceSha }}" >> $env:GITHUB_OUTPUT
      "commitsSinceVersionSource=${{ env.GitVersion_CommitsSinceVersionSource }}" >> $env:GITHUB_OUTPUT
      "uncommittedChanges=${{ env.GitVersion_UncommittedChanges }}" >> $env:GITHUB_OUTPUT
      "commitDate=${{ env.GitVersion_CommitDate }}" >> $env:GITHUB_OUTPUT
      Write-Host "GitVersion outputs set."
